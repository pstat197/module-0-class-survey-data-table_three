---
title: "Analysis of class surveys"
subtitle: "A Preliminary Exploration of Course Data and Self-Reported Proficiency"
author: "Jeff Loomis, Shahil Patel, Sanil Katula"
date: last-modified
published-title: "Updated"
editor: visual
format: pdf
code-copy: true
execute:
  message: false
  warning: false
  echo: false
  cache: true
---


```{r}
library(tidyverse)
library(logisticPCA)
library(ggplot2)

background <- read_csv('../data/background-clean.csv')
```

## Introduction

This report presents an exploratory analysis of anonymized class survey data collected from PSTAT197A students.  
The goal was to investigate whether students’ course-taking patterns — specifically, which upper-division classes they have completed — can reveal underlying proficiency and comfort levels in programming, mathematics, and statistics.  
By applying data-reduction and clustering techniques, we aim to uncover whether objective indicators like coursework can approximate subjective self-assessments of skill.

## Executive summary

We applied logistic PCA and k-means clustering to students’ course-taking patterns to explore whether the classes taken can serve as a proxy for self-reported proficiency and comfort levels. Although the results are not conclusive, the analysis revealed a meaningful structure: the clusters derived from course data align roughly with “beginner,” “intermediate,” and “advanced” groups. These clusters showed corresponding differences in reported proficiency and comfort means, suggesting that class enrollment patterns capture some of the same signal as self-assessments. While further statistical testing would be needed for definitive conclusions, the findings provide preliminary evidence that course-taking behavior may reflect underlying proficiency levels.


## Data description

The data that we used was obtained from class survey data. Every student who chose to share their results was an entry in the dataset. Some samples questions they had to answer were their proficiency in statistics, math and CS as well as which upper division classes they have taken. Students were also surveyed on their preferred options on what they want to do on their capstone project as well as areas in data science they would want to explore. There were 59 responses in the dataset, so the size of the data is one limitation.

## Questions of interest

We sought to understand whether students’ course-taking patterns could reveal underlying levels of proficiency and comfort, and whether those patterns might serve as a substitute for self-reports. Our analysis addressed three questions:

-   What kinds of student groupings (e.g., beginner, intermediate, advanced) emerge when clusters are formed based solely on classes taken?

-   To what extent do clusters based on classes taken resemble the patterns we see in students’ self-reported proficiency and comfort?

-   Can course-taking behavior be used in place of self-reports as a practical proxy for estimating students’ proficiency and comfort levels?

## Findings

The logistic PCA reduced the course data into interpretable dimensions, and the k-means clustering produced three distinct groups, visualized in the PC1–PC2 plot.  
Clusters are moderately separated, suggesting that course-taking behavior carries real structure among respondents.

The cluster summary table shows clear differences across groups:

- **Cluster 1 (n ≈ 23)** had the highest comfort levels across most domains and intermediate-to-advanced self-reported proficiencies.  
  This group likely represents students with balanced experience and confidence — possibly “intermediate–advanced” learners.  

- **Cluster 2 (n ≈ 14)** reported lower comfort and lower proficiencies overall.  
  This group aligns with “beginner” students who have taken fewer upper-division courses or are earlier in the major.  

- **Cluster 3 (n ≈ 14)** tended to report high math and statistics comfort and proficiency, with somewhat lower programming confidence.  
  This cluster appears to represent more quantitatively oriented students — “advanced” in math/statistics, but moderate in programming.

The **z-score line plots** reinforce this interpretation.  
The first plot (based on class-taking data) shows clear divergence among clusters, especially in programming comfort and statistical proficiency.  
The second plot (based on proficiency and comfort directly) reveals similar patterns, suggesting that the clusters derived from course-taking correspond well to the self-reported measures.

Together, these results suggest that students’ completed coursework provides a meaningful, though imperfect, signal of their comfort and skill levels.  
This alignment supports the idea that objective educational data (like class history) can partially substitute for subjective self-assessments in understanding student preparedness.

---
```{r}
# Extract class features (cols 11–29)
classes_df <- background %>% select(11:29)
X <- as.matrix(classes_df)  # logisticPCA expects a matrix of 0/1

set.seed(100)
k_fit <- 4                            # use 3–6 typically; 4 is a common start
fit <- logisticPCA(X, k = k_fit, m = 1, main_effects = TRUE)

scores <- fit$PCs                     # n × k_fit
colnames(scores) <- paste0("PC", seq_len(ncol(scores)))

# Cluster on all k_fit components for better structure
km <- kmeans(scores, centers = 3, nstart = 50)

# Plot only the first two components (projection)
plot_df <- as.data.frame(scores[, 1:2, drop = TRUE]) %>%
  setNames(c("PC1","PC2")) %>%
  mutate(cluster = factor(km$cluster))

ggplot(plot_df, aes(PC1, PC2, color = cluster)) +
  geom_point(alpha = 0.8) +
  labs(title = sprintf("Logistic PCA (k=%d) — clusters shown on PC1–PC2", k_fit),
       color = "Cluster") +
  theme_minimal()
```

```{r}
# Optional profiles in original class space
cluster_profiles <- as.data.frame(X) %>%
  mutate(cluster = km$cluster) %>%
  group_by(cluster) %>%
  summarise(across(everything(), mean), .groups = "drop")


library(dplyr)
library(tidyr)
library(stringr)

background_with_cluster_ids <- background %>%
  mutate(cluster = km$cluster) %>%
  group_by(cluster) %>%
  mutate(cluster_size = n()) %>%   # size per cluster on each row
  ungroup()

prof_vars <- c("prog.prof","math.prof","stat.prof")
comf_vars <- c("prog.comf","math.comf","stat.comf")

# ---- Proficiency means (1=beg, 2=int, 3=adv) + size ----
prof_means <- background_with_cluster_ids %>%
  mutate(across(all_of(prof_vars),
                ~ as.integer(factor(.x, levels = c("beg","int","adv"), ordered = TRUE)))) %>%
  group_by(cluster) %>%
  summarise(
    cluster_size = n(),
    across(all_of(prof_vars), ~ mean(.x, na.rm = TRUE)),
    .groups = "drop"
  )

# ---- All means (proficiency + comfort) + size ----
cluster_means_all <- background_with_cluster_ids %>%
  mutate(across(all_of(prof_vars),
                ~ as.integer(factor(.x, levels = c("beg","int","adv"), ordered = TRUE)))) %>%
  group_by(cluster) %>%
  summarise(
    cluster_size = n(),
    across(c(all_of(prof_vars), all_of(comf_vars)), ~ mean(.x, na.rm = TRUE)),
    .groups = "drop"
  ) %>%
  relocate(cluster_size, .after = cluster)


library(knitr)

cluster_means_all %>%
  kable(
    digits = 2,
    col.names = c("Cluster",
                  "Cluster Size",
                  "prog.prof",
                  "math.prof",
                  "stat.prof",
                  "prog.comf",
                  "math.comf",
                  "stat.comf"),
    caption = "Cluster-wise Means of Proficiency and Comfort (with Cluster Sizes)"
  )
```

```{r}
vars <- c("prog.prof","math.prof","stat.prof","prog.comf","math.comf","stat.comf")

####################################################################################
# Create a graph with a line for each cluster using Z scores to show highs and lows
####################################################################################

line_df <- cluster_means_all %>%
  select(cluster, cluster_size, all_of(vars)) %>%
  pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "mean") %>%
  group_by(variable) %>%
  mutate(z = (mean - mean(mean)) / sd(mean)) %>%
  ungroup() %>%
  mutate(variable = factor(variable, levels = vars))

ggplot(line_df, aes(x = variable, y = z,
                    group = factor(cluster), color = factor(cluster))) +
  geom_line(linewidth = 1) +
  geom_point(size = 2) +
  labs(
    title    = "Cluster profiles across proficiency & comfort (z-scores)",
    subtitle = "Means extracted from clusters formed on class-taking data",
    x = NULL, y = "z-score (within variable)", color = "Cluster"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_color_discrete(
    labels = function(lv) {
      sizes <- cluster_means_all$cluster_size[match(as.integer(lv),
                                                    cluster_means_all$cluster)]
      paste0("C", lv, " (n=", sizes, ")")
    }
  )
```

```{r}
####################################################################################
# Using means from clusters calculated in week2-surveys.R, create a graph with same
# format as the previous graph.
####################################################################################

c1_means <- c( 2.278, 2.500, 2.722, 3.500, 3.611, 4.000)
c2_means <- c( 2.619, 2.714, 2.952, 4.286, 4.714, 4.667)
c3_means <- c( 2.000, 1.750, 1.750, 3.667, 3.500, 3.000)

# Cluster sizes for the new analysis
sizes_B <- c(C1 = 18, C2 = 21, C3 = 12)

# ---- Build the summary table for the new analysis (call it Solution B) ----
means_B <- rbind(c1_means, c2_means, c3_means) %>%
  as.data.frame()
colnames(means_B) <- vars
means_B <- means_B %>%
  mutate(cluster = 1:3,
         cluster_size = c(sizes_B["C1"], sizes_B["C2"], sizes_B["C3"])) %>%
  relocate(cluster, cluster_size)

# ---- Make the z-score line plot (three lines, one per cluster) ----
line_df_B <- means_B %>%
  select(cluster, cluster_size, all_of(vars)) %>%
  pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "mean") %>%
  group_by(variable) %>%
  mutate(z = (mean - mean(mean)) / sd(mean)) %>%  # standardize within variable
  ungroup() %>%
  mutate(variable = factor(variable, levels = vars))

ggplot(line_df_B, aes(x = variable, y = z,
                      group = factor(cluster), color = factor(cluster))) +
  geom_line(linewidth = 1) +
  geom_point(size = 2) +
  labs(
    title    = "Cluster profiles across proficiency & comfort (z-scores)",
    subtitle = "Means extracted from clusters formed on proficiency & comfort data",
    x = NULL, y = "z-score (within variable)", color = "Cluster"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_color_discrete(
    labels = function(lv) {
      sizes <- means_B$cluster_size[match(as.integer(lv), means_B$cluster)]
      paste0("C", lv, " (n=", sizes, ")")
    }
  )

```


## Conclusion

Our analysis finds that course-taking data alone can reproduce recognizable groupings that correspond to self-reported proficiency and comfort levels.  
Clusters based solely on which classes students have taken align broadly with beginner, intermediate, and advanced patterns.  
While the relationships are not perfect, they demonstrate that course history captures underlying differences in experience and confidence.  
This insight may inform advising or curriculum design, as instructors could identify students’ likely comfort zones based on their coursework patterns.


## Limitations and Next Steps

While informative, this analysis is preliminary and exploratory:

- **Sample size** is modest (≈ 59 responses), which limits generalizability.  
- **No formal significance testing** was applied; differences are descriptive, not inferential.  
- **Potential bias** exists if the respondents differ systematically from the full student population.  
- **Temporal effects** (e.g., course recency or year in program) were not modeled but may influence results.

Future work could incorporate additional variables such as student year, GPA, or time since each course, and apply more formal validation (e.g., cross-validation or stability analysis).  
Expanding the dataset and comparing results across sections or years would also strengthen conclusions.

## 
